{"ast":null,"code":"var _jsxFileName = \"/home/worker/Desktop/my-network/src/components/test.jsx\";\n// Render Prop\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nexport const Basic = () => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, \"Any place in your app!\"), React.createElement(Formik, {\n  initialValues: {\n    email: '',\n    password: ''\n  },\n  validate: values => {\n    const errors = {};\n\n    if (!values.email) {\n      errors.email = 'Required';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n      errors.email = 'Invalid email address';\n    }\n\n    return errors;\n  },\n  onSubmit: (values, {\n    setSubmitting\n  }) => {\n    setTimeout(() => {\n      alert(JSON.stringify(values, null, 2));\n      setSubmitting(false);\n    }, 400);\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, ({\n  isSubmitting\n}) => React.createElement(Form, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, React.createElement(Field, {\n  type: \"email\",\n  name: \"email\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}), React.createElement(ErrorMessage, {\n  name: \"email\",\n  component: \"div\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}), React.createElement(Field, {\n  type: \"password\",\n  name: \"password\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}), React.createElement(ErrorMessage, {\n  name: \"password\",\n  component: \"div\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}), React.createElement(\"button\", {\n  type: \"submit\",\n  disabled: isSubmitting,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}, \"Submit\"))));\nexport default Basic;","map":{"version":3,"sources":["/home/worker/Desktop/my-network/src/components/test.jsx"],"names":["React","Formik","Form","Field","ErrorMessage","Basic","email","password","values","errors","test","setSubmitting","setTimeout","alert","JSON","stringify","isSubmitting"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;AAEA,OAAO,MAAMC,KAAK,GAAG,MACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI,oBAAC,MAAD;AACI,EAAA,aAAa,EAAE;AAAEC,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,QAAQ,EAAE;AAAvB,GADnB;AAEI,EAAA,QAAQ,EAAEC,MAAM,IAAI;AAChB,UAAMC,MAAM,GAAG,EAAf;;AACA,QAAI,CAACD,MAAM,CAACF,KAAZ,EAAmB;AACfG,MAAAA,MAAM,CAACH,KAAP,GAAe,UAAf;AACH,KAFD,MAEO,IACH,CAAC,2CAA2CI,IAA3C,CAAgDF,MAAM,CAACF,KAAvD,CADE,EAEL;AACEG,MAAAA,MAAM,CAACH,KAAP,GAAe,uBAAf;AACH;;AACD,WAAOG,MAAP;AACH,GAZL;AAaI,EAAA,QAAQ,EAAE,CAACD,MAAD,EAAS;AAAEG,IAAAA;AAAF,GAAT,KAA+B;AACrCC,IAAAA,UAAU,CAAC,MAAM;AACbC,MAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeP,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACAG,MAAAA,aAAa,CAAC,KAAD,CAAb;AACH,KAHS,EAGP,GAHO,CAAV;AAIH,GAlBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAoBK,CAAC;AAAEK,EAAAA;AAAF,CAAD,KACG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,OAAZ;AAAoB,EAAA,IAAI,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEI,oBAAC,YAAD;AAAc,EAAA,IAAI,EAAC,OAAnB;AAA2B,EAAA,SAAS,EAAC,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFJ,EAGI,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,UAAZ;AAAuB,EAAA,IAAI,EAAC,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHJ,EAII,oBAAC,YAAD;AAAc,EAAA,IAAI,EAAC,UAAnB;AAA8B,EAAA,SAAS,EAAC,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJJ,EAKI;AAAQ,EAAA,IAAI,EAAC,QAAb;AAAsB,EAAA,QAAQ,EAAEA,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,CArBR,CAFJ,CADG;AAsCP,eAAeX,KAAf","sourcesContent":["// Render Prop\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\n\nexport const Basic = () => (\n    <div>\n        <h1>Any place in your app!</h1>\n        <Formik\n            initialValues={{ email: '', password: '' }}\n            validate={values => {\n                const errors = {};\n                if (!values.email) {\n                    errors.email = 'Required';\n                } else if (\n                    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n                ) {\n                    errors.email = 'Invalid email address';\n                }\n                return errors;\n            }}\n            onSubmit={(values, { setSubmitting }) => {\n                setTimeout(() => {\n                    alert(JSON.stringify(values, null, 2));\n                    setSubmitting(false);\n                }, 400);\n            }}\n        >\n            {({ isSubmitting }) => (\n                <Form>\n                    <Field type=\"email\" name=\"email\" />\n                    <ErrorMessage name=\"email\" component=\"div\" />\n                    <Field type=\"password\" name=\"password\" />\n                    <ErrorMessage name=\"password\" component=\"div\" />\n                    <button type=\"submit\" disabled={isSubmitting}>\n                        Submit\n                    </button>\n                </Form>\n            )}\n        </Formik>\n    </div>\n);\n\nexport default Basic;"]},"metadata":{},"sourceType":"module"}